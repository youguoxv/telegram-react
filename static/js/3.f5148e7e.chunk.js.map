{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/AddMember.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/MessageContext.js","Components/ColumnMiddle/InputBoxHints.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","chatId","selected","onSelect","t","shortTitle","getChatShortTitle","ChatTile","withTranslation","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","sprintf","args","postProcess","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","store","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","for_comment","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","AppStore","invokeScheduledAction","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","size","height","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","forceUpdate","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","ChatStore","showSavedMessages","isVerified","isChatVerified","title","defaultProps","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","url","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","nextContext","openMedia","minithumbnail","miniSrc","data","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Boolean","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","sender","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","params","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","sender_user_id","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","loadUsersContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","User","userId","voice_note","ChatDetails","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","dialog","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","showOnline","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","saveInternal","load","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","EventEmitter","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","_m","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","Array","_chats","_c","ids","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","canClearHistory","unpinMessage","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","Broom","AddMember","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","reverse","counterStr","prevCounter","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","timingFunction","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","unpinned","prevMessage","prevContent","PlaylistEdit","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleSearchChat","localize","str","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","onDateClick","isOutgoing","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","prevMessageIds","albumHistoryEquals","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","calculate","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","MessageContext","createContext","withMessage","MessageComponent","Consumer","handleCallbackQueryAnswer","via_bot_user_id","show_alert","game","LStore","getString","showAlert","ok","showSnackbar","showOpenGameAlert","is_verified","showOpenUrlAlert","ask","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","password","onCloseDialog","onError","forward_text","button_id","skip_confirm","showRequestUrlAlert","buttonId","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getMonth","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","formatString","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","IV_PHOTO_SIZE","prevInstantView","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","AlertDialog","BlockSenderDialog","reportSpam","handleReportSpamChange","handleDeleteChatChange","reportText","getChatLocation","address","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","formatPluralString","InputPasswordDialog","handleClickShowPassword","showPassword","getErrorMessage","passwordHint","password_hint","errorMessage","InputLabel","htmlFor","Input","endAdornment","InputAdornment","FormHelperText","LeaveChatDialog","getDeleteDialogText","OpenGameDialog","OpenUrlDialog","overflowWrap","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","bot_user_id","request_write_access","text1","entities1","option1","option2","text2","entities2","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateOpenGameAlert","handleOpenGameContinue","onClientUpdateOpenUrlAlert","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","onClientUpdateAlert","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","request","handleLeaveContinue","undo","getLeaveChatNotification","isChatMember","isCreator","handleDeleteMessagesContinue","clientUpdateType","addScheduledAction","persist","removeScheduledAction","pinMessageAction","unpinMessageAction","unpinAllMessages","handleAlertContinue","sharedPreferences","existing","addHash","encodeURIComponent","chars","Uint8Array","crypto","getRandomValues","curHash","openGameInBrowser","handleRequestUrlContinue","allow_write_access","handleInputPasswordContinue","handleBlockSenderContinue","blockSender","reason","reportChat","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.f5148e7e.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nexport function sprintf(t, key, ...args) {\n    return t(key, { postProcess: 'sprintf', sprintf: args });\n}\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\nimport AppStore from '../../Stores/ApplicationStore';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false,\n            for_comment: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(async targetChatId => {\n            if (inputMessageContent) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const membersFilter = this.filterRef.get('members');\n        if (selectedIndex === 0 && membersFilter) {\n            item = membersFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (members.length > 0 ? 1 : 0) +\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia =\n            members.length > 0\n            || photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {members.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('members', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\n                            <span>{t('GroupMembers')}</span>\n                        </div>\n                    )}\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const nonEmptyUrlEntities = urlEntities\n                    .filter(x => {\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\n                        entityText = entityText.replace(/\\u200B/g,'');\n\n                        return entityText.length > 0;\n                    });\n\n                const links = nonEmptyUrlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        chatId={chatId}\n                        messageId={messageId}\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../../Tile/User';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat, openUser } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\nimport Chat from '../../Tile/Chat';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            case 'user': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return 74;\n            }\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 0: {\n                const { user_id: id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`user_id=${id}`}\n                        className='groups-in-common-item'>\n                        <User userId={id} onSelect={onOpen}/>\n                    </ListItem>\n                );\n            }\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 0: {\n                return true;\n            }\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 0: {\n                return null;\n            }\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 0: {\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\n            }\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (members.length > 0) {\n                selectedIndex = 0;\n            } else if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                members,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasMembers = members.length > 0;\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 0 && !hasMembers\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasMembers) {\n                selectedIndex = 0;\n            } else if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 0: {\n                    loadUsersContent(store, items.map(x => x.user_id));\n                    break;\n                }\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 0) {\n            source = members;\n        } else if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 0) return;\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n                break;\n            }\n            case 'chatMember': {\n                const { user_id } = item;\n                openUser(user_id, true);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            members,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = members && members.length > 0\n            || photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        let chatUrl = ''\n        if (username) {\n            if (isPrivateChat(chatId)) {\n                chatUrl = username;\n            } else {\n                const tMeUrl = OptionStore.get('t_me_url')\n                    .value\n                    .toLowerCase()\n                    .replace('https://', '')\n                    .replace('http://', '');\n\n                chatUrl = tMeUrl + username;\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {chatUrl}\n                                                </Typography>\n                                            }\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender } = last_message;\n        if (sender.user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(DialogMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\n    </g>,\n    'PinOff'\n);\n\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <ListItem\n                button\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}\n                >\n                    <div className='dialog-wrapper'>\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                                <DialogMeta chatId={chatId} />\n                            </div>\n                            <div className='tile-second-row'>\n                                <DialogContent chatId={chatId} />\n                                <DialogBadge chatId={chatId} chatList={chatList} />\n                            </div>\n                        </div>\n                    </div>\n                    <Popover\n                        open={contextMenu}\n                        onClose={this.handleCloseContextMenu}\n                        anchorReference='anchorPosition'\n                        anchorPosition={{ top, left }}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right'\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'left'\n                        }}\n                        onMouseDown={e => e.stopPropagation()}>\n                        <MenuList onClick={e => e.stopPropagation()}>\n                            {canToggleArchive && (\n                                <MenuItem onClick={this.handleArchive}>\n                                    {isArchived ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnarchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Unarchive')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <ArchiveIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('Archive')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            {canTogglePin && (\n                                <MenuItem onClick={this.handlePin}>\n                                    {isPinned ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnpinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('UnpinFromTop')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <PinIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('PinToTop')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleViewInfo}>\n                                <ListItemIcon>\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                                </ListItemIcon>\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                            </MenuItem>\n                            { canMute && (\n                                <MenuItem onClick={this.handleMute}>\n                                    {isMuted ? (\n                                        <>\n                                            <ListItemIcon>\n                                                <UnmuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsUnmute')} />\n                                        </>\n                                    ) : (\n                                        <>\n                                            <ListItemIcon>\n                                                <MuteIcon />\n                                            </ListItemIcon>\n                                            <ListItemText primary={t('ChatsMute')} />\n                                        </>\n                                    )}\n                                </MenuItem>\n                            )}\n                            <MenuItem onClick={this.handleRead}>\n                                {isUnread ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <MessageIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsRead')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnreadIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('MarkAsUnread')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                            {/*{clearHistory && (*/}\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                            {/*        <ListItemIcon>*/}\n                            {/*            <BroomIcon />*/}\n                            {/*        </ListItemIcon>*/}\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                            {/*    </MenuItem>*/}\n                            {/*)}*/}\n                            {deleteChat && deleteChatTitle && (\n                                <MenuItem onClick={this.handleDeleteChat}>\n                                    <ListItemIcon>\n                                        <DeleteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={deleteChatTitle} />\n                                </MenuItem>\n                            )}\n                        </MenuList>\n                    </Popover>\n            </ListItem>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 50);\n    setTimeout(() => {\n        element.scrollTo({ top: 0, behavior });\n    }, 1);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        let [cache, files, filters, contacts] = await Promise.all(promises);\n\n        let dropCache = false;\n        if (cache && cache.chats) {\n            for (let i = 0; i < cache.chats.length; i++) {\n                const { last_message } = cache.chats[i];\n                if (last_message && last_message.sender_user_id) {\n                    dropCache = true;\n                    break;\n                }\n            }\n        }\n        if (dropCache) {\n            cache = null;\n        }\n\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const chatMap = new Map(chats.map(x => [x.id, x]));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender } = last_message;\n                switch (sender['@type']) {\n                    case 'messageSenderUser': {\n                        const user = UserStore.get(sender.user_id);\n                        if (user) {\n                            userMap.set(user.id, user);\n                        }\n                        break;\n                    }\n                    case 'messageSenderChat': {\n                        const chat = ChatStore.get(sender.chat_id);\n                        if (chat) {\n                            chatMap.set(chat.id, chat);\n                        }\n                        break;\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats: [...chatMap.values()],\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport { openChatList } from '../../Actions/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListMain' });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        window._m = new Map();\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        if (chatListEquals(this.state.chatList, chatList)) {\n            this.scrollToTop();\n        } else {\n            this.setState({\n                chatList,\n                params: {\n                    loading: false,\n                    completed: false\n                }\n            }, () => {\n                this.loadFirstSlice();\n            });\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\n                    window._m.set(chat_id, chat_id);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        // console.log('[vl] reorderChats', orderedChatIds);\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const list = current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        let offsetChat = null;\n        if (!replace && chats && chats.length > 0) {\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\n            if (offsetChat) {\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\n                offsetChatId = offsetChat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        window._chats = chats;\n        window._c = new Map((chats || []).map(i => [i, i]));\n        const ids = [];\n        window._m.forEach((value, key) => {\n            if (!window._c.has(key)) {\n                ids.push(key);\n            }\n        });\n        console.log('[vl] render', (chats || []).length, window._c.size, window._m.size, ids.length,\n            //ids.map(x => ChatStore.get(x))\n        );\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    handleClick = () => {\n        const { innerListRef } = this.props;\n        if (!innerListRef) return;\n\n        const { current: list } = innerListRef;\n        if (!list) return;\n\n        list.scrollToTop();\n    };\n\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender.user_id && chatSearch ? (\n                <UserTile userId={sender.user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender.user_id) {\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, message } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (message) {\n                const { sender } = message;\n                if (sender && sender.user_id) {\n                    users.set(sender.user_id, sender.user_id);\n                }\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender.user_id) {\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions, t } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport { unblockSender } from '../../../Actions/Message';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\n    }\n\n    handleUnblockUser = async userId => {\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.senders.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, senders } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    senders: senders.filter(x => x.user_id !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedMessageSenders',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\n    }\n\n    onClientUpdateBlob = update => {\n        const { chatId, messageId, thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\n        if (!thumbnail) return null;\n\n        const file = thumbnail.photo || thumbnail.file;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(file);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile' onClick={onClick}>\n                {miniSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-mini-blurred': true }\n                        )}\n                        draggable={false}\n                        src={miniSrc}\n                        alt=''\n                    />\n                )}\n                {src && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\nimport { closePinned, openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        closePinned();\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {thumbnail && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            minithumbnail={minithumbnail}\n                            thumbnail={thumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n    };\n\n    onClientUpdateSendText = update => {\n        const { text } = update;\n\n        if (!text) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = text;\n        focusInput(element);\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const { chatSelectOptions } = AppStore;\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\n            return;\n        }\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n\n        // const { text, position } = this.getTextAndCaretPosition();\n        // this.searchUsernameOrHashtag(text, position, [], false);\n    };\n\n    getTextAndCaretPosition = () => {\n        const { current: input } = this.newMessageRef;\n        if (!input) return;\n\n        input.focus()\n        let _range = document.getSelection().getRangeAt(0);\n        let range = _range.cloneRange();\n        range.selectNodeContents(input);\n        range.setEnd(_range.endContainer, _range.endOffset);\n\n        return { text: input.innerText, position: range.toString().length };\n    };\n\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\n        const { chatId } = this.state;\n\n        const searchResultUsernames = [];\n\n        if (this.cancelDelayRunnable) {\n            clearTimeout(this.cancelDelayRunnable);\n            this.cancelDelayRunnable = null;\n        }\n\n        const info = getChatFullInfo(chatId);\n        const needUsernames = true;\n        const needBotContext = true;\n\n        const now = Date.now();\n        this.now = now;\n\n        let searchPosition = position;\n        if (text.length > 0) {\n            searchPosition--;\n        }\n\n        this.lastText = text;\n        this.lastUsernameOnly = usernameOnly;\n\n        let foundType = -1;\n        let result = '';\n        let resultStartPosition;\n        let resultLength;\n\n        let dogPosition = -1;\n        if (usernameOnly) {\n            result += text.substring(1);\n            resultStartPosition = 0;\n            resultLength = result.length;\n            foundType = 0;\n        } else {\n            for (let i = searchPosition; i >= 0; i--) {\n                if (i >= text.length){\n                    continue;\n                }\n                let ch = text[i];\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\n                    if (ch === '@') {\n                        if (needUsernames || needBotContext && i === 0){\n                            if (!info && i !== 0) {\n                                this.lastText = text;\n                                this.lastPosition = position;\n                                this.messages = messages;\n                                this.closeHints(now);\n                                return;\n                            }\n                            dogPosition = i;\n                            foundType = 0;\n                            resultStartPosition = i;\n                            resultLength = result.length + 1;\n                        }\n                    }\n                }\n\n                result = ch + result;\n            }\n        }\n\n        if (foundType === -1) {\n            this.closeHints(now);\n            return;\n        }\n\n        if (foundType === 0) {\n            const users = [];\n            const usersMap = new Map();\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\n                const { sender } = messages[i];\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\n                    usersMap.set(sender.user_id, sender.user_id);\n                    users.push(sender.user_id);\n                }\n            }\n\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\n            const hasSpace = usernameString.indexOf(' ') >= 0;\n            const newResult = [];\n            const newResultsMap = new Map();\n            const newMap = new Map();\n\n            const inlineBots = [];\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\n\n            }\n\n            const chat = ChatStore.get(chatId);\n            if (chat && info && info.members) {\n                for (let i = -1; i < info.members.length; i++) {\n                    let username;\n                    let firstName;\n                    let lastName;\n                    let object;\n                    let id;\n                    if (i === -1) {\n                        if (!usernameString.length) {\n                            newResult.push(chat);\n                            continue;\n                        }\n                        firstName = chat.title;\n                        lastName = '';\n                        username = chat.username;\n                        object = chat;\n                        id = -chat.id;\n                    } else {\n                        const { user_id } = info.members[i];\n                        const user = UserStore.get(user_id);\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\n                            continue;\n                        }\n                        if (!usernameString.length) {\n                            if (!isDeletedUser(user_id)) {\n                                newResult.push(user);\n                                continue;\n                            }\n                        }\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        username = user.username;\n                        object = user;\n                        id = user.id;\n                    }\n\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\n                        newResult.push(object);\n                        newMap.set(id, object);\n                    }\n                }\n            }\n\n            if (isSupergroup(chatId) && usernameString.length > 0) {\n                if (newResult.length < 5) {\n                    this.cancelDelayRunnable = setTimeout(() => {\n                        this.cancelDelayRunnable = null;\n                        this.showUsersResult(now, newResult, newMap, true);\n                    }, 0);\n                } else {\n                    this.showUsersResult(now, newResult, newMap, true);\n                }\n\n                setTimeout(async () => {\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const result = await TdLibController.send({\n                        '@type': 'searchChatMembers',\n                        chat_id: chatId,\n                        query: usernameString,\n                        limit: 20,\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\n                    });\n\n                    if (this.now !== now) {\n                        return;\n                    }\n\n                    const { members } = result;\n                    if (members.length > 0) {\n                        for (let i = 0; i < members.length; i++) {\n                            const { user_id } = members[i];\n                            if (isMeUser(user_id)) {\n                                continue;\n                            }\n                            const user = UserStore.get(user_id);\n                            if (!user) {\n                                continue;\n                            }\n\n                            searchResultUsernames.push(user);\n                        }\n\n                        this.notifyDataSetChanged(now, searchResultUsernames);\n                    }\n\n\n                }, 200);\n            } else {\n                this.showUsersResult(now, newResult, newMap, true);\n            }\n        }\n    }\n\n    notifyDataSetChanged(id, searchResultUsernames) {\n        console.log('[search] global', searchResultUsernames);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsGlobal',\n            id,\n            global: searchResultUsernames\n        });\n    }\n\n    showUsersResult(id, newResult, newMap, notify) {\n        console.log('[search] local', newResult);\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsLocal',\n            id,\n            local: newResult\n        });\n    }\n\n    closeHints(id) {\n        console.log('[search] close');\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateHintsClose',\n            id\n        });\n    }\n\n    openHints() {\n\n    }\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                            {command}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        if (prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const { is_blocked, last_message } = chat;\n\n                return {\n                    prevChatId: chatId,\n\n                    isBlocked: is_blocked,\n                    hasLastMessage: Boolean(last_message)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId, options } = this.props;\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.options !== options) {\n            return true;\n        }\n\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.hasLastMessage !== hasLastMessage) {\n            return true;\n        }\n\n        if (nextState.isBlocked !== isBlocked) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        this.setState({\n            clearHistory: update.inProgress\n        });\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chat_id, last_message } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            hasLastMessage: Boolean(last_message)\n        });\n    };\n\n    onUpdateChatIsBlocked = update => {\n        const { chat_id, is_blocked } = update;\n        const { chatId } = this.props;\n\n        if (chat_id !== chatId) return;\n\n        this.setState({\n            isBlocked: is_blocked\n        });\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    handleUnblock = () => {\n        const { chatId } = this.props;\n\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\n    };\n\n    handleStartBot = async () => {\n        const { chatId, options } = this.props;\n\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n        if (options && options.botStartMessage) {\n            const { botUserId, parameter } = options.botStartMessage;\n\n            await sendBotStartMessage(chatId, botUserId, parameter);\n        } else {\n            await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: 0,\n                input_message_content: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: '/start',\n                        entities: []\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: true\n                }\n            });\n        }\n    };\n\n    render() {\n        const { chatId, options, t } = this.props;\n        const { hasLastMessage, clearHistory } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type, is_blocked } = chat;\n        if (!type) return null;\n\n        if (is_blocked) {\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\n        }\n\n        if (options && options.botStartMessage) {\n            const isBot = isBotChat(chatId);\n            if (isBot) {\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n            }\n        }\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypeSecret':\n            case 'chatTypePrivate': {\n                const isBot = isBotChat(chatId);\n                if (isBot && (!hasLastMessage || clearHistory)) {\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\n                }\n\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'AddMember'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport RemoveMemberIcon from '../../Assets/Icons/RemoveMember';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage, canSwitchBlocked, getChatSender } from '../../Utils/Chat';\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return false;\n\n        const { pinned } = media;\n        if (!pinned) return false;\n        if (pinned.length !== 1) return false;\n\n        requestUnpinMessage(chatId, pinned[0].id);\n    };\n\n    handleSwitchBlocked = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const sender = getChatSender(chatId);\n        const { is_blocked } = chat;\n        if (is_blocked) {\n            unblockSender(sender);\n        } else {\n            requestBlockSender(sender);\n        }\n\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_blocked } = chat;\n\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = hasOnePinnedMessage(chatId);\n        const switchBlocked = canSwitchBlocked(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                    {switchBlocked && (\n                        <MenuItem onClick={this.handleSwitchBlocked}>\n                            <ListItemIcon>\n                                {is_blocked ? <AddMemberIcon /> : <RemoveMemberIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './AnimatedItem.css';\n\nclass AnimatedItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.containerRef = React.createRef();\n        this.item1Ref = React.createRef();\n        this.item2Ref = React.createRef();\n\n        this.state = { };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return nextProps.item !== this.props.item;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { item } = props;\n        const { to, prevItem } = state;\n\n        if (item !== prevItem) {\n            return {\n                prevItem: item,\n                from: to,\n                to: item,\n                scrollDown: item > to\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { scrollDown } = this.props;\n        const { to } = this.state;\n\n        this.animate('', to, scrollDown);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { item, scrollDown } = this.props;\n        const { from, to } = this.state;\n\n        if (prevProps.item !== item) {\n            this.animate(from, to, scrollDown);\n        }\n    }\n\n    animate = (from, to, scrollDown) => {\n        const { height } = this.props;\n\n        const container = this.containerRef.current;\n        const item1 = this.item1Ref.current;\n        const item2 = this.item2Ref.current;\n\n        if (!container || !item1 || !item2) return;\n\n        const duration = '250ms';\n        const timingFunction = 'ease-in-out';\n\n        if (scrollDown) {\n            container.style.cssText = `transform: translateY(-${height}px)`;\n            item1.style.cssText = 'opacity: 0';\n            item2.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        } else {\n            container.style.cssText = 'transform: translateY(0px)';\n            item1.style.cssText = 'opacity: 1';\n            item2.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\n            });\n        }\n    };\n\n    render() {\n        const { scrollDown, height } = this.props;\n        const { from, to } = this.state;\n\n        // console.log('[c] render', [from, to, scrollDown]);\n\n        return (\n            <div className='animated-item' style={{ height }}>\n                <div className='animated-item-placeholder'>{to}</div>\n                <div ref={this.containerRef} className='animated-item-wrapper'>\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAnimatedItem.propTypes = {\n    item: PropTypes.string,\n    scrollDown: PropTypes.bool,\n    height: PropTypes.number\n};\n\nAnimatedItem.defaultProps = {\n    item: null,\n    scrollDown: true,\n    height: 21\n}\n\nexport default AnimatedItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AnimatedItem from './AnimatedItem';\nimport './AnimatedCounter.css';\n\nclass AnimatedCounter extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { counter } = props;\n        const { prevCounter } = state;\n\n        if (counter !== prevCounter) {\n            return {\n                prevCounter: counter,\n\n                scrollDown: counter > prevCounter\n            };\n        }\n\n        return null;\n    }\n\n    render() {\n        const { counter, height, reverse } = this.props;\n        const { scrollDown } = this.state;\n        if (!counter) return null;\n\n        const counterStr = counter + '';\n\n        return (\n            <div className='animated-counter' style={{ height }}>\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\n            </div>\n        );\n    }\n}\n\nAnimatedCounter.propTypes = {\n    counter: PropTypes.number,\n    height: PropTypes.number,\n    reverse: PropTypes.bool\n};\n\nAnimatedCounter.defaultProps = {\n    counter: 0,\n    height: 21,\n    reverse: false\n}\n\nexport default AnimatedCounter;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\nimport AnimatedCounter from './AnimatedCounter';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {t('Forward')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {t('Delete')}\n                        <span>&nbsp;</span>\n                        <AnimatedCounter counter={count}/>\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\n    'PlaylistEdit'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './PinnedMessageBorder.css';\n\nclass PinnedMessageBorder extends React.Component {\n\n    drawRect = (x, y, width, height, radius) => {\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\n    };\n\n    getClipPath = (id, barHeight, count) => {\n        const radius = 1;\n\n        let d = '';\n        if (count === 3) {\n            d = this.drawRect(0, 0, 2, barHeight, radius)\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\n                + this.drawRect(0, 23, 2, barHeight, radius);\n        } else {\n            for (let i = 0; i < count; i++) {\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\n            }\n        }\n\n        return (\n            <clipPath id={id}>\n                <path d={d}/>\n            </clipPath>\n        );\n    };\n\n    getBarHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkHeight = (count, index) => {\n        let barHeight = 32;\n        if (count === 1) {\n            barHeight = 32;\n        } else if (count === 2) {\n            barHeight = 15;\n        } else if (count === 3) {\n            barHeight = index === 1 ? 10 : 9;\n        } else if (count === 4) {\n            barHeight = 7;\n        } else if (count > 3) {\n            barHeight = 7;\n        }\n\n        return barHeight;\n    };\n\n    getMarkTranslateY = (index, barHeight, count) => {\n        if (count === 1) {\n            return 0;\n        } else if (count === 2) {\n            return index === 0 ? 0 : barHeight + 2;\n        }\n\n        if (count === 3) {\n            if (index === 0) {\n                return 0;\n            } else if (index === 1) {\n                return 11;\n            }\n\n            return 23;\n        } else {\n            return (barHeight + 2) * index;\n        }\n    };\n\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\n        if (count <= 4) {\n            return 0;\n        }\n\n        if (index <= 1) {\n            return 0;\n        } else if (index >= count - 2) {\n            return trackHeight - 32;\n        }\n\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\n    };\n\n    getTrackHeight = (count, barHeight) => {\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\n    };\n\n    render() {\n        const { count, index } = this.props;\n        if (count === 1) {\n            return (\n                <div className='pinned-message-border'>\n                    <div className='pinned-message-border-wrapper-1'/>\n                </div>);\n        }\n\n        const barHeight = this.getBarHeight(count, index);\n        const markHeight = this.getMarkHeight(count, index);\n        const trackHeight = this.getTrackHeight(count, barHeight);\n\n        const clipPathId = `clipPath_${count}`;\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\n\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\n\n        return (\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\n                    <svg height='0' width='0'>\n                        <defs>{clipPath}</defs>\n                    </svg>\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessageBorder.propTypes = {\n    count: PropTypes.number,\n    index: PropTypes.number\n};\n\nexport default PinnedMessageBorder;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ReplyTile from '../Tile/ReplyTile';\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\nimport AnimatedCounter from './AnimatedCounter';\nimport PinnedMessageBorder from './PinnedMessageBorder';\n\nclass PinnedMessage extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const media = MessageStore.getMedia(chatId);\n\n            const pinned = media ? media.pinned : [];\n\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\n            const thumbnail = getReplyThumbnail(chatId, messageId);\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                pinned,\n                prevMessageId: 0,\n                messageId,\n                minithumbnail,\n                thumbnail,\n                lastPhoto: {\n                    messageId,\n                    minithumbnail,\n                    thumbnail\n                }\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.props;\n        const { clientData, pinned, messageId } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.pinned !== pinned) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        const { prevMessageId, messageId } = this.state;\n\n        if (prevProps.chatId !== chatId) {\n            this.animateText(messageId, prevMessageId, 0);\n        }\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onClientUpdateCurrentPinnedMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chatId) {\n            return;\n        }\n\n        this.scrollToMessageId(update.messageId);\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n        if (!message.is_pinned) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, is_permanent, message_ids } = update;\n        const messageIds = new Map(message_ids.map(x => [x, x]));\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => messageIds.has(x.id))) {\n            return;\n        }\n        if (!is_permanent) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { pinned } = this.state;\n        const { chat_id, message_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n        if (!pinned.some(x => x.id === message_id)) {\n            return;\n        }\n\n        this.setPinnedState();\n    };\n\n    animateText = (messageId, prevMessageId, duration = 250) => {\n        const textElement = document.getElementById('pinned-message-animated-text');\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\n        if (!textElement || !text1Element || !text2Element) return;\n\n        const timingFunction = 'ease-in-out';\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n        if (scrollDown) {\n            textElement.style.cssText = 'transform: translateY(-19px)';\n            text1Element.style.cssText = 'opacity: 0';\n            text2Element.style.cssText = 'opacity: 1';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        } else {\n            textElement.style.cssText = 'transform: translateY(0px)';\n            text1Element.style.cssText = 'opacity: 1';\n            text2Element.style.cssText = 'opacity: 0';\n            requestAnimationFrame(() => {\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\n            });\n        }\n    };\n\n    setPinnedState = () => {\n        const { chatId } = this.props;\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\n\n        const clientData = ChatStore.getClientData(chatId);\n\n        const media = MessageStore.getMedia(chatId);\n        const pinned = media ? media.pinned : [];\n\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\n        if (!messageId && pinned.length > 0) {\n            messageId = pinned[0].id;\n        }\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\n\n        const thumbnail = getReplyThumbnail(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            clientData,\n            pinned,\n            prevMessageId,\n            messageId,\n            thumbnail,\n            minithumbnail,\n            lastPhoto: {\n                messageId,\n                thumbnail,\n                minithumbnail\n            }\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (currentMessageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setPinnedState();\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    scrollToMessageId = nextMessageId => {\n        const { chatId } = this.props;\n        const { messageId, thumbnail, minithumbnail } = this.state;\n\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\n\n        const lastPhoto = nextThumbnail ? {\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail\n        } : {\n            messageId,\n            thumbnail,\n            minithumbnail\n        }\n\n        MessageStore.currentPinned = { chatId, id: messageId };\n        this.setState({\n            prevMessageId: messageId,\n            messageId: nextMessageId,\n            thumbnail: nextThumbnail,\n            minithumbnail: nextMinithumbnail,\n            lastPhoto\n        }, () => {\n            if (this.state.prevMessageId === 0) return;\n            if (messageId === this.state.messageId) return;\n\n            this.animateText(this.state.messageId, this.state.prevMessageId);\n        });\n    };\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { pinned, messageId } = this.state;\n        if (!pinned.length) return;\n\n        if (!messageId) return;\n        if (event.nativeEvent.which !== 1) return;\n\n        MessageStore.clickedPinned = { chatId, id: messageId };\n\n        openChat(chatId, messageId);\n\n        const index = pinned.findIndex(x => x.id === messageId);\n        if (index === -1) return;\n\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\n\n        this.scrollToMessageId(pinned[nextIndex].id);\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n    };\n\n    handleEditClick = event => {\n        const { chatId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateOpenPinned',\n            chatId\n        })\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\n\n        if (!chatId) return null;\n\n        if (clientData) {\n            const { unpinned } = clientData;\n            if (unpinned) return null;\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\n        if (isDeletedMessage(prevMessage)) {\n            content = t('DeletedMessage');\n        }\n\n        let index = 0;\n        let caption = t('PinnedMessage');\n        if (pinned && pinned.length > 1) {\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\n            if (pinned.length === 2) {\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\n            } else {\n                caption = (\n                    <>\n                        {t('PinnedMessage')}\n                        {index > 0 && (\n                            <>\n                                {' #'}\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\n                            </>)\n                        }\n                    </>);\n            }\n        }\n\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\n\n        return (\n            <>\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\n                    <CSSTransition\n                        in={!!thumbnail}\n                        classNames='pinned-message-tile'\n                        timeout={250}\n                        mountOnEnter={true}\n                        unmountOnExit={true}>\n                        <div>\n                            <ReplyTile\n                                chatId={chatId}\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\n                            />\n                        </div>\n                    </CSSTransition>\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{caption}</div>\n                        <div className='pinned-message-subtitle'>\n                            <div id='pinned-message-animated-text'>\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\n                            </div>\n                        </div>\n                    </div>\n                    { pinned.length > 1 && (\n                        <IconButton\n                            className='pinned-message-edit-button'\n                            aria-label='Edit'\n                            onClick={this.handleEditClick}\n                            onMouseDown={this.handleMouseDown}>\n                            <PlaylistEditIcon />\n                        </IconButton>\n                    )}\n                </ListItem>\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectionCount} />\n                    <div className='header-details-row'>\n                        {showProgressAnimation ? (\n                            <div\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                                onClick={this.openChatDetails}>\n                                <span className='header-status-content'>{title}</span>\n                                <HeaderProgress />\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                                    {subtitle}\n                                </span>\n                                <span className='header-status-tail' />\n                            </div>\n                        ) : (\n                            <HeaderChat\n                                className={classNames('grow', 'cursor-pointer')}\n                                chatId={chatId}\n                                onClick={this.openChatDetails}\n                            />\n                        )}\n                        <PinnedMessage chatId={chatId} />\n                        {chat && (\n                            <>\n                                <IconButton\n                                    className='header-right-second-button'\n                                    aria-label='Search'\n                                    onClick={this.handleSearchChat}>\n                                    <SearchIcon />\n                                </IconButton>\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\n                            </>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\nimport { requestBlockSender } from '../../Actions/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n\n        requestBlockSender(getChatSender(chatId));\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/PinOff';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\nimport { saveBlob } from '../../Utils/File';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false,\n            for_comment: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            requestUnpinMessage(chatId, messageId);\n        } else {\n            requestPinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        const hasItems =\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\n        if (!hasItems) {\n            return null;\n        }\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinMessage')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinMessage')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\n    'PinFilled'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport PinIcon from '../../Assets/Icons/PinFilled';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { albumHistoryEquals } from '../../Utils/Common';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, messageIds } = props;\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\n\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n            const id = ids[ids.length - 1];\n\n            const message = MessageStore.get(chatId, id);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                prevMessageIds: messageIds,\n\n                message,\n                date,\n                editDate,\n                interactionInfo,\n                isOutgoing,\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n    }\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId, messageIds } = this.props;\n\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\n\n        if (chat_id !== chatId) return;\n        if (!ids.some(x => x === message_id)) return;\n\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ editDate });\n    };\n\n    onUpdateMessageInteractionInfo = update => {\n        const { chat_id, message_id, interaction_info } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n        if (message.chat_id !== chat_id) return;\n        if (message.id !== message_id) return;\n\n        this.setState({ interactionInfo: interaction_info });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\n\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                {/*{messageId}*/}\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {isPinned && (\n                    <>\n                        <PinIcon className='meta-pin-icon' />\n                        <span>&nbsp;</span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    messageIds: PropTypes.arrayOf(PropTypes.number),\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Audio from '../Media/Audio';\nimport Document from '../Media/Document';\nimport MessageMenu from '../MessageMenu';\nimport Meta from '../Meta';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './AlbumItem.css';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content } = message;\n\n        switch (content['@type']) {\n            case 'messageAudio': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Audio\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            audio={content.audio}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { message } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize, source } = this.props;\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\n\n        const { chat_id, id } = message;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {(selected || highlighted) && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds } = this.props;\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.lastSelected !== lastSelected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.lastHighlighted !== lastHighlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false, lastHighlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        this.setState({ selected: false, lastSelected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail, source } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            lastHighlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageIds={messageIds}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageIds={messageIds}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n                source={source}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', 'message-document-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        // 'message-highlighted': highlighted && !selected,\n                        'message-album-last-highlighted': lastHighlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst MessageContext = React.createContext({\n    chatId: 0,\n    messageId: 0\n});\n\nexport default MessageContext;\n\nexport function withMessage(Component) {\n    class MessageComponent extends React.Component {\n        render() {\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\n        }\n    }\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\n\n    return MessageComponent;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem } from '@material-ui/core';\nimport User from '../Tile/User';\nimport ChatStore from '../../Stores/ChatStore';\nimport './InputBoxHints.css'\n\nclass InputBoxHints extends React.Component {\n    state = {\n        local: [],\n        global: [],\n        id: null\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { local, global, id } = this.state;\n\n        if (nextState.local !== local) {\n            return true;\n        }\n\n        if (nextState.global !== global) {\n            return true;\n        }\n\n        if (nextState.id !== id) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\n    }\n\n    onClientUpdateHintsClose = update => {\n        this.setState({\n            id: null,\n            local: [],\n            global: []\n        });\n    };\n\n    onClientUpdateHintsGlobal = update => {\n        const { id, global } = update;\n        if (this.state.id !== id) return;\n\n        this.setState({\n            id,\n            global\n        });\n    };\n\n    onClientUpdateHintsLocal = update => {\n        const { id, local } = update;\n\n        this.setState({\n            id,\n            local,\n            global: []\n        });\n    };\n\n    render() {\n        const { local, global } = this.state;\n\n        const results = (local || []).concat(global || []);\n\n        console.log('[hints] render', local, global, results);\n        if (!results.length) return null;\n\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n            </div>\n        );\n    }\n\n}\n\nInputBoxHints.propTypes = {};\n\nexport default InputBoxHints;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\n    'ArrowTopRight'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\n    'ShareFilled'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withMessage } from '../MessageContext';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PendingIcon from '../../../Assets/Icons/Pending';\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\nimport { getUserFullName } from '../../../Utils/User';\nimport { getChatTitle } from '../../../Utils/Chat';\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\nimport { openChatSelect } from '../../../Actions/Message';\nimport LStore from '../../../Stores/LocalizationStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './KeyboardButton.css';\n\nclass KeyboardButton extends React.Component {\n    state = {\n        loading: false\n    }\n\n    handleCallbackQueryAnswer = (type, result, message) => {\n        const { chatId } = this.props;\n        const { sender, content, via_bot_user_id } = message;\n        const { text, show_alert, url } = result;\n        const { game } = content;\n\n        let title = '';\n        if (message) {\n            if (via_bot_user_id) {\n                title = getUserFullName(via_bot_user_id, null);\n            } else {\n                title = getChatTitle(chatId, false);\n            }\n        }\n        title = title || LStore.getString('Bot');\n\n        if (text) {\n            if (show_alert) {\n                showAlert({\n                    title,\n                    message: text,\n                    ok: LStore.getString('OK')\n                });\n            } else {\n                showSnackbar(text, closeSnackbar => snackKey => {\n                    return (\n                        <IconButton\n                            key='close'\n                            aria-label='Close'\n                            color='inherit'\n                            className='notification-close-button'\n                            onClick={() => { closeSnackbar(snackKey); }}>\n                            <CloseIcon />\n                        </IconButton>\n                    )\n                });\n            }\n        } else if (url) {\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\n                const user = UserStore.get(userId);\n\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\n            } else {\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\n            }\n        }\n    };\n\n    handleClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, type } = this.props;\n\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                showAlert({\n                    title: LStore.getString('AppName'),\n                    message: LStore.getString('PaymentsNotSupported'),\n                    ok: LStore.getString('OK')\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                /// gamee, querty_bot\n\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, content, via_bot_user_id } = message;\n                if (!content) break;\n\n                let payload = null;\n                let game = null;\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\n                    game = content.game;\n                    if (!game) break;\n\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\n                } else {\n                    payload = { '@type': 'callbackQueryPayloadData', data };\n                }\n\n                this.setState({ loading: true });\n                const result = await TdLibController.send({\n                    '@type': 'getCallbackQueryAnswer',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    payload\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                this.handleCallbackQueryAnswer(type, result, message);\n                break;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                /// BotFather + transfer bot\n                const { data } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                this.setState({ loading: true });\n                const passwordState = await TdLibController.send({\n                    '@type': 'getPasswordState'\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                const { has_password } = passwordState;\n                if (!has_password) break;\n\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\n                    console.log('[pwd] onPassword', password);\n                    this.setState({ loading: true });\n                    let error = null;\n                    const result = await TdLibController.send({\n                        '@type': 'getCallbackQueryAnswer',\n                        chat_id: chatId,\n                        message_id: messageId,\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\n                    }).catch(e => {\n                        error = e;\n                    }).finally(() => {\n                        this.setState({ loading: false });\n                    });\n\n                    if (error) {\n                        console.log('[pwd] onPassword error', error);\n                        onError && onError(error);\n                    } else if (result) {\n                        console.log('[pwd] onPassword result', result);\n                        onCloseDialog && onCloseDialog();\n                        this.handleCallbackQueryAnswer(type, result, message);\n                    }\n                });\n                break;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                const { url, id, forward_text } = type;\n\n                this.setState({ loading: true });\n                let hasError = false;\n                const result = await TdLibController.send({\n                    '@type': 'getLoginUrlInfo',\n                    chat_id: chatId,\n                    message_id: messageId,\n                    button_id: id\n                }).catch(e => {\n                    hasError = true;\n                }).finally(() => {\n                    this.setState({ loading: false });\n                });\n\n                if (hasError) {\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                } else {\n                    switch (result['@type']) {\n                        case 'loginUrlInfoOpen': {\n                            const { url, skip_confirm } = result;\n\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\n                            break;\n                        }\n                        case 'loginUrlInfoRequestConfirmation': {\n                            const { url } = result;\n\n\n                            console.log('[login] result', result);\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\n                            break;\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                /// youtube\n                const { in_current_chat, query } = type;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) break;\n\n                const { sender, via_bot_user_id } = message;\n                let userId = sender.user_id;\n                if (via_bot_user_id !== 0) {\n                    userId = via_bot_user_id;\n                }\n\n                const user = UserStore.get(userId);\n                if (!user) break;\n\n                const inline = `@${user.username} ${query}`;\n\n                if (in_current_chat){\n                    setText(inline);\n                } else {\n                    openChatSelect({ switchInline: inline });\n                }\n\n                break;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                /// qwerty_bot\n                const { url } = type;\n\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\n                break;\n            }\n        }\n    };\n\n    getIcon(type) {\n        switch (type['@type']) {\n            case 'inlineKeyboardButtonTypeBuy': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallback':\n            case 'inlineKeyboardButtonTypeCallbackGame': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\n                return null;\n            }\n            case 'inlineKeyboardButtonTypeLoginUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n            case 'inlineKeyboardButtonTypeSwitchInline': {\n                const { in_current_chat } = type;\n\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\n            }\n            case 'inlineKeyboardButtonTypeUrl': {\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\n            }\n        }\n    }\n\n    render() {\n        const { text, type } = this.props;\n        const { loading } = this.state;\n\n        const icon = this.getIcon(type);\n\n        return (\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\n                {text}\n                {icon}\n                {loading && (\n                    <PendingIcon\n                        className='keyboard-button-progress'\n                        viewBox='0 0 14 14'\n                    />\n                )}\n            </ListItem>\n        );\n    }\n\n}\n\nKeyboardButton.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    text: PropTypes.string,\n    type: PropTypes.object,\n    onClick: PropTypes.func\n};\n\nexport default withMessage(KeyboardButton);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardButton from './KeyboardButton';\nimport './KeyboardRow.css';\n\nclass KeyboardRow extends React.Component {\n    render() {\n        const { row } = this.props;\n        if (!row) return null;\n        if (!row.length) return null;\n\n        return (\n            <div className='keyboard-row'>\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\n            </div>\n        );\n    }\n}\n\nKeyboardRow.propTypes = {\n    row: PropTypes.array\n};\n\nexport default KeyboardRow;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardRow from './KeyboardRow';\nimport MessageContext from '../MessageContext';\nimport './ReplyMarkup.css';\n\nclass ReplyMarkup extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId, prevMessageId } = state;\n        const { chatId, messageId } = props;\n\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                message: {\n                    chatId,\n                    messageId\n                }\n            }\n        }\n\n        return null;\n    }\n\n    render() {\n        const { markup } = this.props;\n        const { message } = this.state;\n\n        if (!markup) return null;\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\n\n        const { rows } = markup;\n        if (!rows.length) return null;\n\n        return (\n            <div className='reply-markup'>\n                <MessageContext.Provider value={message}>\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\n                </MessageContext.Provider>\n            </div>\n        );\n    }\n}\n\nReplyMarkup.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    markup: PropTypes.object\n};\n\nexport default ReplyMarkup;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\n            let totalLength = 0;\n            if (site_name) {\n                totalLength += site_name.length;\n            }\n            if (title) {\n                totalLength += title.length;\n            }\n            if (description) {\n                totalLength += description.text.length;\n            }\n\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport ReplyMarkup from './Markup/ReplyMarkup';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle,\n    isEmptySelection\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageContent = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        this.updateMessageEdited = update;\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\n    };\n\n    handleUpdateMessageContentAndEditedOnce = () => {\n        const { updateMessageContent, updateMessageEdited } = this;\n        this.updateMessageContent = null;\n        this.updateMessageEdited = null;\n\n        if (!updateMessageContent && !updateMessageEdited) return;\n\n        const { chatId, messageId } = this.props;\n\n        let handled = false;\n        if (updateMessageContent) {\n            const { emojiMatches } = this.state;\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\n            if (newEmojiMatches !== emojiMatches) {\n                handled = true;\n                this.setState({ emojiMatches: newEmojiMatches });\n            }\n        }\n\n        if (handled) return;\n\n        startMessageEditing(chatId, messageId);\n        this.forceUpdate(() => {\n            stopMessageEditing(chatId, messageId);\n        });\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (!isEmptySelection(selection)) {\n            return;\n        }\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender.user_id) {\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded =\n            !hasCaption  && (\n                content['@type'] === 'messageAnimation' ||\n                content['@type'] === 'messageVideo' ||\n                content['@type'] === 'messagePhoto' ||\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div>\n                                <div\n                                    className={classNames('message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                    style={style}>\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                        <div className='message-title'>\n                                            {showTitle && !showForward && (\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\n                                            )}\n                                            {showForward && <Forward forwardInfo={forward_info} />}\n                                        </div>\n                                    )}\n                                    {showReply && (\n                                        <Reply\n                                            chatId={chatId}\n                                            messageId={reply_to_message_id}\n                                            onClick={this.handleReplyClick}\n                                        />\n                                    )}\n                                    {media}\n                                    <div\n                                        className={classNames('message-text', {\n                                            'message-text-1emoji': emojiMatches === 1,\n                                            'message-text-2emoji': emojiMatches === 2,\n                                            'message-text-3emoji': emojiMatches === 3\n                                        })}>\n                                        {text}\n                                    </div>\n                                    {webPage && (\n                                        <WebPage\n                                            chatId={chatId}\n                                            messageId={messageId}\n                                            openMedia={this.openMedia}\n                                            meta={inlineMeta}\n                                        />\n                                    )}\n                                    {withBubble && meta}\n                                </div>\n                                {reply_markup && (\n                                    <ReplyMarkup\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        markup={reply_markup}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                    source={source}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\nimport MessageMenu from './MessageMenu';\n\nconst chatPhotoStyle = {\n    width: 96,\n    height: 96,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false,\n            contextMenu: false,\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\n        const { highlighted, contextMenu } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted, contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={96}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={null}\n                    source={'chat'}\n                />\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\nimport FilesDropTarget from './FilesDropTarget';\nimport InputBoxHints from './InputBoxHints';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { sendBotStartMessage } from '../../Actions/Message';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lastRequests = new Map();\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId, messageId } = this.props;\n        this.handleSelectChat(chatId, null, messageId, null);\n\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateStartMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { history } = this.state;\n        if (!history.length) return;\n\n        const { current: list } = this.listRef;\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\n            return;\n        }\n\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\n\n        this.scrollBottomAfterEditing = {\n            chatId,\n            messageId\n        };\n    };\n\n    onClientUpdateStopMessageEditing = update => {\n        const { chatId, messageId } = update;\n        const { chatId: currentChatId } = this.props;\n        if (currentChatId !== chatId) return;\n\n        const { scrollBottomAfterEditing } = this;\n        if (!scrollBottomAfterEditing) return;\n\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\n\n        const { current: list } = this.listRef;\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\n        this.scrollBottomAfterEditing = null;\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chat_id, message_id, is_pinned } = update;\n        const { chatId, filter } = this.props;\n        if (chatId !== chat_id) return;\n        if (!filter) return;\n\n        if (is_pinned) {\n            const message = MessageStore.get(chat_id, message_id);\n\n            const list = this.listRef.current;\n\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            }\n\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n            const history = [message];\n            this.scrollBehaviorNone = true;\n            this.insert(history, newState, () => {\n                this.scrollBehaviorNone = false;\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, history);\n            this.viewMessages(history);\n        } else {\n            this.deleteHistory([message_id]);\n\n            const media = MessageStore.getMedia(chatId);\n            if (media && !media.pinned.length) {\n                closePinned();\n            }\n        }\n    };\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(history, newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\n        this.sessionId = {\n            date: new Date(),\n            loading: false,\n            completed: false,\n            loadMigratedHistory: false\n        };\n        const { sessionId } = this;\n\n        this.prevScrollTop = null;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            if (previousChatId !== chatId && !this.props.filter) {\n                TdLibController.send({\n                    '@type': 'openChat',\n                    chat_id: chatId\n                });\n            }\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            sessionId.loading = true;\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\n            .catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                sessionId.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.cancelUpdatePinnedMessage = true;\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n                requestAnimationFrame(() => {\n                    this.cancelUpdatePinnedMessage = false;\n                });\n\n                this.loadIncompleteHistory(result, limit);\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            if (previousChatId !== chatId && !this.props.filter) {\n                // getChatFullInfo(chatId);\n                getChatMedia(chatId);\n                if (this.props.options) {\n                    const { botStartMessage } = this.props.options;\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\n                        const { botUserId, parameter } = botStartMessage;\n\n                        await sendBotStartMessage(chatId, botUserId, parameter);\n                    }\n                }\n            }\n        } else {\n            sessionId.loading = true;\n            this.replace(0, [], () => {\n                sessionId.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId && !this.props.filter) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async (result, limit) => {\n        const MAX_ITERATIONS = 5;\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\n            result = await this.onLoadNext();\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\n        }\n    };\n\n    isCompleteHistory = (result, limit) => {\n        if (!result) return false;\n        if (!result.messages.length) return true;   // end of the history\n\n        return result.messages.length >= limit;\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n        if (sessionId.loading) return;\n\n        if (sessionId.loadMigratedHistory) {\n            return await this.onLoadMigratedHistory();\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        let result = null;\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\n        if (this.lastRequests.has(lastRequestKey)) {\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\n        } else {\n            sessionId.loading = true;\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\n                .finally(() => {\n                    sessionId.loading = false;\n                });\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (!result.messages.length) {\n            this.lastRequests.set(lastRequestKey, result);\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                        });\n                    }\n                }, 100);\n            }\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        if (!chatId) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) {\n            fullInfo = await getChatFullInfo(chatId);\n        }\n        if (!fullInfo.upgraded_from_basic_group_id) {\n            return;\n        }\n\n        sessionId.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n        if (sessionId.loading) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\n        .finally(() => {\n            sessionId.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(result.messages, state => {\n            if (result.messages.length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n\n            this.loadIncompleteHistory(result, limit);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { sessionId } = this;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (sessionId.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        sessionId.loading = true;\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\n            .finally(() => {\n                sessionId.loading = false;\n            });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(result.messages, {}, () => {\n            this.scrollBehaviorNone = false;\n            if (result.messages.length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        let history = [...this.state.history];\n        const index = history.findIndex(x => x.id === oldMessageId);\n        if (index !== -1) {\n            history.splice(index, 1, message);\n        } else {\n            history = this.state.history;\n        }\n\n        this.setState({ history }, callback);\n    }\n\n    insert(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history).sort((a, b) => {\n                if (a.id < b.id) {\n                    return -1;\n                } else if (a.id > b.id) {\n                    return 1;\n                }\n\n                return 0;\n            })\n        }, callback);\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    updateItemsInView = () => {\n        if (!this.messages) return null;\n\n        const messages = [];\n        const messagesMap = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    const key = `${chatId}_${messageId}`;\n                    messagesMap.set(key, key);\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        const key = `${chatId}_${messageIds[j]}`;\n                        messagesMap.set(key, key);\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!mapEquals(this.inViewMap, messagesMap)) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\n\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\n            this.inViewMap = messagesMap;\n\n            return messages;\n        }\n\n        return null;\n    };\n\n    updatePinnedMessage = scrollToNext => {\n        const { chatId, filter } = this.props;\n        if (filter) return;\n\n        const { prevScrollTop } = this;\n        if (prevScrollTop === null) {\n            // console.log('[pin] handleScroll 3.1');\n            return;\n        }\n        // const { prevScrollTop } = this;\n        // if (prevScrollTop === null) return;\n\n        const media = MessageStore.getMedia(chatId);\n        if (!media) return;\n        if (!media.pinned) return;\n        if (media.pinned.length <= 1) return;\n\n        const messages = [];\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId, messageIds } = message.props;\n                if (messageId) {\n                    messages.push({ chatId, messageId });\n                } else if (messageIds) {\n                    for (let j = 0; j < messageIds.length; j++) {\n                        messages.push({ chatId, messageId: messageIds[j] });\n                    }\n                }\n            }\n        }\n\n        if (!messages) return;\n        if (messages.length <= 1) return;\n\n        const minId = messages[0].messageId;\n        const maxId = messages[messages.length - 1].messageId;\n\n        let id = 0;\n        for (let i = 0; i < media.pinned.length; i++) {\n            const pinned = media.pinned[i];\n            if (pinned.id >= minId && pinned.id <= maxId) {\n                id = pinned.id;\n                break;\n            }\n        }\n\n        if (!id) {\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\n            const pinnedMaxId = media.pinned[0].id\n\n            if (pinnedMaxId < minId) {\n                id = pinnedMaxId;\n            } else if (pinnedMinId > maxId) {\n                id = pinnedMinId;\n            }\n        }\n\n        const { clickedPinned, currentPinned } = MessageStore;\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\n\n\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\n                // console.log('[pin] handleScroll 3.2');\n                return;\n            }\n\n            // console.log('[pin] handleScroll 4', { chatId, id });\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\n        } else {\n            // console.log('[pin] handleScroll 3.3');\n        }\n    };\n\n    updateScrollDownVisibility = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevHistory = history;\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\n\n        this.updateItemsInView();\n\n        if (!this.cancelUpdatePinnedMessage) {\n            this.updatePinnedMessage(scrollToNext);\n        }\n\n        this.updateScrollDownVisibility();\n\n        if (this.prevScrollTop !== null) {\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\n                this.onLoadNext();\n            }\n\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\n                this.onLoadPrevious();\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    getRequest = (chatId, fromMessageId, offset, limit) => {\n        const { filter } = this.props;\n\n        if (filter) {\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\n                const media = MessageStore.getMedia(chatId);\n                if (media && media.pinned && media.pinned.length > 0) {\n                    return Promise.resolve({\n                        '@type': 'messages',\n                        messages: [...media.pinned]\n                    });\n                }\n            }\n\n            return TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset,\n                limit,\n                filter,\n                sender_user_id: null,\n                query: null\n            });\n        }\n\n        return TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset,\n            limit\n        });\n    };\n\n    scrollToStart = async () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\n        if (hasLastMessage) {\n            this.scrollToBottom();\n        } else {\n            this.handleSelectChat(chatId, chatId, 0, messageId);\n        }\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        if (!event.dataTransfer) return;\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            dataTransfer: event.dataTransfer\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                !senderEquals(sender, prevMessage.sender) ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId, filter } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <DocumentAlbum\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || !senderEquals(x.sender, nextMessage.sender)\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                                source={filter ? 'pinned' : 'chat'}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n                {/*<InputBoxHints />*/}\n            </div>\n        );\n    }\n}\n\nMessagesList.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number,\n    options: PropTypes.object,\n    filter: PropTypes.object\n};\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport HeaderCommand from './HeaderCommand';\nimport { clearSelection, closePinned } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessagesHeader.css'\n\nclass PinnedMessagesHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const media = MessageStore.getMedia(props.chatId);\n\n        this.state = {\n            selectedCount: MessageStore.selectedItems.size,\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { selectedCount, pinnedCount } = this.state;\n\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n\n        if (nextState.pinnedCount !== pinnedCount) {\n            return true;\n        }\n\n        return true;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n    }\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onUpdateMessageIsPinned = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n        if (chatId !== chat_id) return;\n\n        const media = MessageStore.getMedia(chatId);\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\n\n        this.setState({\n            pinnedCount\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({\n            selectedCount: MessageStore.selectedItems.size\n        });\n    }\n\n    handleClose = () => {\n        const { selectedCount } = this.state;\n        if (selectedCount > 0) {\n            clearSelection();\n        }\n\n        closePinned();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedCount, pinnedCount } = this.state;\n\n        let title = t('PinnedMessages');\n        if (pinnedCount === 1) {\n            title = t('PinnedMessage');\n        } else if (pinnedCount > 1) {\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\n        }\n\n        return (\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\n                <IconButton\n                    className='header-left-button main-menu-button'\n                    onClick={this.handleClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-details-content'>\n                    <HeaderCommand count={selectedCount}/>\n                    <div className={classNames('header-status', 'grow')}>\n                        <span className='header-status-content'>{title}</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nPinnedMessagesHeader.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(PinnedMessagesHeader);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport MessagesList from './MessagesList';\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\nimport { requestUnpinMessage } from '../../Actions/Client';\nimport { canPinMessages } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport './PinnedMessages.css';\n\nclass PinnedMessages extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevChatId } = state;\n        const { chatId } = props;\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                opened: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\n    }\n\n    onClientUpdateOpenPinned = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId } = update;\n\n        if (currentChatId !== chatId) return;\n\n        this.setState({\n            opened: true\n        });\n    };\n\n    onClientUpdateClosePinned = update => {\n        this.setState({\n            opened: false\n        });\n    };\n\n    handleUnpinAll = async () => {\n        const { chatId } = this.props;\n\n        requestUnpinMessage(chatId, null);\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const { opened } = this.state;\n        if (!opened) return null;\n\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\n\n        return (\n            <div className='pinned-messages'>\n                <div className='pinned-messages-wrapper'>\n                    <div className='dialog-background'/>\n                    <div className='dialog-details-wrapper'>\n                        <PinnedMessagesHeader chatId={chatId} />\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\n                    </div>\n                </div>\n            </div>\n        );\n\n        // return (\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\n        //\n        //     </SidebarPage>\n        // );\n    }\n}\n\nPinnedMessages.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessages);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { closeChatSelect } from '../../Actions/Message';\nimport './SelectChatPlaceholder.css';\n\nclass SelectChatPlaceholder extends React.Component {\n\n    handleClick = () => {\n        closeChatSelect();\n    }\n\n    render() {\n        const { t } = this.props;\n\n        return (\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\n            </div>\n        );\n    }\n\n}\n\nSelectChatPlaceholder.propTypes = {};\n\nexport default withTranslation()(SelectChatPlaceholder);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessages from './PinnedMessages';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null,\n            chatSelectOptions: null,\n            chatOpenOptions: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\n            return true;\n        }\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateClearOpenChatOptions = update => {\n        this.setState({\n            chatOpenOptions: null\n        });\n    }\n\n    onClientUpdateChatSelect = update => {\n        const { options } = update;\n\n        this.setState({\n            chatSelectOptions: options\n        });\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatSelectOptions } = this.state;\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\n\n        this.setState({\n            chatId,\n            messageId,\n            chatOpenOptions,\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <div className='dialog-details-wrapper'>\n                    <HeaderPlayer />\n                    <Header chatId={chatId} />\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\n                </div>\n                {chatSelectOptions && <SelectChatPlaceholder/>}\n                <PinnedMessages chatId={chatId}/>\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date, sender } = message;\n\n        const dateHint = getDateHint(date);\n\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={sender} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    render() {\n        const { chatId, date, style } = this.props;\n\n        return (\n            <div className='media-info' style={style}>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport LStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\n                    />\n                    <div style={{ width: 64 }}/>\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport { getFormattedText } from '../../Utils/Message';\nimport './AlertDialog.css';\n\nclass AlertDialog extends React.Component {\n\n    handleClose = result => {\n        const { onClose } = this.props;\n\n        onClose && onClose(false);\n    };\n\n    render() {\n        const { params, t } = this.props;\n        if (!params) return null;\n\n        let { title, message, ok, cancel } = params;\n\n        if (message['@type'] === 'formattedText') {\n            message = getFormattedText(message, t, {});\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {message}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    { cancel && (\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\n                            {cancel}\n                        </Button>\n                    )}\n                    { ok && (\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\n                            {ok}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nAlertDialog.propTypes = {\n    params: PropTypes.object\n};\n\nexport default withTranslation()(AlertDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './BlockSenderDialog.css';\n\nclass BlockSenderDialog extends React.Component {\n    state = {\n        reportSpam: true,\n        deleteChat: true\n    };\n\n    handleReportSpamChange = () => {\n        const { reportSpam } = this.state;\n\n        this.setState({\n            reportSpam: !reportSpam\n        });\n    };\n\n    handleDeleteChatChange = () => {\n        const { deleteChat } = this.state;\n\n        this.setState({\n            deleteChat: !deleteChat\n        });\n    };\n\n    render() {\n        const { sender, onClose, t } = this.props;\n        if (!sender) return null;\n\n        const { reportSpam, deleteChat } = this.state;\n\n        let title = null;\n        let text = null;\n        const entities = [];\n        let reportText = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                const { user_id } = sender;\n\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\n                text = getSimpleMarkupEntities(text, entities);\n                reportText = LStore.getString('BlockContact');\n                break;\n            }\n            case 'messageSenderChat': {\n                const { chat_id } = sender;\n\n                const location = getChatLocation(chat_id);\n                if (location) {\n                    title = LStore.getString('ReportUnrelatedGroup');\n                    if (location.address) {\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\n                        text = getSimpleMarkupEntities(text, entities);\n                    } else {\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\n                    }\n                } else {\n                    title = LStore.getString('ReportSpamTitle');\n                    if (isChannelChat(chat_id)) {\n                        text = LStore.getString('ReportSpamAlertChannel');\n                    } else {\n                        text = LStore.getString('ReportSpamAlertGroup');\n                    }\n                }\n                reportText = LStore.getString('ReportChat');\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, null)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>\n                    {title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\n                    </DialogContentText>\n                    { sender['@type'] === 'messageSenderUser' && (\n                        <div className='block-sender-params'>\n                            <FormControlLabel\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\n                                label={t('DeleteReportSpam')}\n                            />\n                            <FormControlLabel\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\n                                label={t('DeleteThisChat')}\n                            />\n                        </div>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, null)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\n                        {reportText}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n\n}\n\nBlockSenderDialog.propTypes = {\n    sender: PropTypes.object\n};\n\nexport default withTranslation()(BlockSenderDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { sprintf } from '../../Utils/Language';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport LStore from '../../Stores/LocalizationStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {confirm}\n                    </DialogContentText>\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\n                        <FormControlLabel\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\n                            label={\n                                isPrivateChat(chatId)\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\n                                    : t('DeleteForAll')\n                            }\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './InputPasswordDialog.css';\n\nclass InputPasswordDialog extends React.Component {\n\n    state = { };\n\n    handleChange = e => {\n        this.password = e.target.value;\n    };\n\n    handleClickShowPassword = () => {\n        const { showPassword } = this.state;\n\n        this.setState({ showPassword: !showPassword });\n    };\n\n    getErrorMessage = error => {\n        const { t } = this.props;\n\n        if (!error) return null;\n\n        if (error.message === 'PASSWORD_HASH_INVALID') {\n            return t('InvalidPassword');\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\n            const str = error.message.replace('Too Many Requests: retry after ', '');\n            try {\n                const time = parseInt(str);\n                const timeString = time < 60\n                    ? LStore.formatPluralString('Seconds', time)\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\n\n                return LStore.formatString('FloodWaitTime', timeString);\n            } catch (e) {\n                return error.message;\n            }\n        }\n\n        return error.message;\n    }\n\n    render() {\n        const { state, error, onClose, t } = this.props;\n        if (!state) return null;\n\n        const { showPassword, loading } = this.state;\n        const { password_hint: passwordHint } = state;\n\n        const errorMessage = this.getErrorMessage(error);\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {t('PleaseEnterCurrentPasswordTransfer')}\n                    </DialogContentText>\n                    <FormControl className='auth-input' fullWidth>\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\n                        <Input\n                            fullWidth\n                            autoFocus\n                            autoComplete='off'\n                            id='adornment-password'\n                            type={showPassword ? 'text' : 'password'}\n                            disabled={loading}\n                            error={Boolean(error)}\n                            onChange={this.handleChange}\n                            endAdornment={\n                                <InputAdornment position='end'>\n                                    <IconButton\n                                        aria-label='Toggle password visibility'\n                                        onClick={this.handleClickShowPassword}\n                                        edge='end'>\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                        />\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nInputPasswordDialog.propTypes = {\n    state: PropTypes.object,\n    error: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(InputPasswordDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { getUserFullName } from '../../Utils/User';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenGameDialog.css';\n\nclass OpenGameDialog extends React.Component {\n    render() {\n        const { game, params, onClose, t } = this.props;\n        if (!game) return null;\n\n        const { userId } = params;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('OK')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenGameDialog.propTypes = {\n    game: PropTypes.object,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenGameDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport LStore from '../../Stores/LocalizationStore';\nimport './OpenUrlDialog.css';\n\nclass OpenUrlDialog extends React.Component {\n    render() {\n        const { url, onClose, t } = this.props;\n        if (!url) return null;\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true)} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nOpenUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(OpenUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { modalManager } from '../../Utils/Modal';\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\nimport LStore from '../../Stores/LocalizationStore';\nimport UserStore from '../../Stores/UserStore';\nimport './RequestUrlDialog.css';\n\nclass RequestUrlDialog extends React.Component {\n    state = {\n        value1: true,\n        value2: true\n    };\n\n    handleValue1Change = () => {\n        const { value1 } = this.state;\n\n        this.setState({ value1: !value1 });\n    };\n\n    handleValue2Change = () => {\n        const { value2 } = this.state;\n\n        this.setState({ value2: !value2 });\n    };\n\n    render() {\n        const { url, params, onClose, t } = this.props;\n        if (!url) return null;\n\n        const { value1, value2 } = this.state;\n\n        const { result } = params;\n        if (!result) return null;\n\n        const { domain, bot_user_id, request_write_access } = result;\n\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\n        const entities1 = [];\n        text1 = getSimpleMarkupEntities(text1, entities1);\n        const option1 = (\n            <FormControlLabel\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\n            />\n        );\n\n        let option2 = null;\n        if (request_write_access) {\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\n            const entities2 = [];\n            text2 = getSimpleMarkupEntities(text2, entities2);\n            option2 = (\n                <FormControlLabel\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\n                />\n            );\n        }\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={e => onClose(e, false)}\n                classes={{ paper: 'alert-dialog' }}>\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\n                    <DialogContentText>\n                        {LStore.formatString('OpenUrlAlert2', url)}\n                    </DialogContentText>\n                    {option1}\n                    {option2}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={e => onClose(e, false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\n                        {t('Open')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nRequestUrlDialog.propTypes = {\n    url: PropTypes.string,\n    params: PropTypes.object,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(RequestUrlDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { modalManager } from '../../Utils/Modal';\nimport ChatStore from '../../Stores/ChatStore';\nimport './PinMessageDialog.css';\n\nclass PinMessageDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageId,\n                revoke: !isPrivateChat(chatId)\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { revoke } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        let text = '';\n        switch (chat.type['@type']) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                text = t('PinMessageAlertChat');\n                break;\n            }\n            case 'chatTypeBasicGroup': {\n                text = t('PinMessageAlert');\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                if (isChannelChat(chatId)) {\n                    text = t('PinMessageAlertChannel');\n                } else {\n                    text = t('PinMessageAlert');\n                }\n                break;\n            }\n        }\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                    <>\n                        {\n                            isPrivateChat(chatId) && (\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\n                                />\n                            )\n                        }\n                    </>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(PinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { modalManager } from '../../Utils/Modal';\nimport './UnpinMessageDialog.css';\n\nclass UnpinMessageDialog extends React.Component {\n\n    render() {\n        const { messageId, onClose, t } = this.props;\n\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false)}\n                aria-labelledby='dialog-title'>\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {text}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nUnpinMessageDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(UnpinMessageDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AlertDialog from './Popup/AlertDialog';\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport OpenGameDialog from './Popup/OpenGameDialog';\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\nimport PinMessageDialog from './Popup/PinMessageDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\nimport { clearSelection, closePinned } from '../Actions/Client';\nimport { openGameInBrowser } from '../Utils/Game';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { reportChat } from '../Actions/Chat';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null,\n        pinMessage: null,\n        unpinMessage: null,\n        alert: null,\n        openUrlAlert: null,\n        openGameAlert: null,\n        requestUrlAlert: null,\n        inputPasswordAlert: null,\n        requestBlockSenderAlert: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\n    }\n\n    onClientUpdateBlockSender = update => {\n        const { sender } = update;\n\n        this.setState({ requestBlockSenderAlert: { sender }});\n    }\n\n    onClientUpdateInputPasswordAlert = update => {\n        const { state, onPassword } = update;\n\n        this.setState({ inputPasswordAlert: { state, onPassword } });\n    }\n\n    onClientUpdateOpenGameAlert = update => {\n        const { game, params } = update;\n\n        if (params && params.isVerified) {\n            this.openGameAlert = { game, params };\n            this.handleOpenGameContinue(null, true);\n        } else {\n            this.setState({ openGameAlert: { game, params } });\n        }\n    }\n\n    onClientUpdateOpenUrlAlert = update => {\n        const { url, params } = update;\n\n        if (params && !params.ask) {\n            this.openUrlAlert = { url, params };\n            this.handleOpenUrlContinue(null, true);\n        } else {\n            this.setState({ openUrlAlert: { url, params } });\n        }\n    };\n\n    onClientUpdateRequestUrlAlert = update => {\n        const { url, params } = update;\n\n        this.setState({ requestUrlAlert: { url, params } });\n    }\n\n    onClientUpdateSnackbar = update => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n        const { message, action } = update;\n\n        enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: action(closeSnackbar)\n        });\n    };\n\n    onClientUpdateAlert = update => {\n        const { params } = update;\n\n        this.setState({ alert: { params } });\n    };\n\n    onClientUpdateUnpinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.unpinMessage = {\n                chatId,\n                messageId\n            };\n            this.handleUnpinMessageContinue(true, false);\n        } else {\n            this.setState({\n                unpinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdatePinMessage = update => {\n        const { chatId, messageId } = update;\n\n        if (isMeChat(chatId)) {\n            this.pinMessage = {\n                chatId,\n                messageId\n            };\n            this.handlePinMessageContinue(true, false);\n        } else {\n            this.setState({\n                pinMessage: {\n                    chatId,\n                    messageId\n                }\n            });\n        }\n    };\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = async (result, undo = true) => {\n        const { leaveChat } = this.state || this;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.leaveChat = null;\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        if (undo) {\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n        } else {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n\n            }\n        }\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                closeSnackbar(snackKey);\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            closeSnackbar(snackKey);\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            AppStore.removeScheduledAction(key);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        AppStore.removeScheduledAction(key);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    handlePinMessageContinue = (result, revoke) => {\n        let { pinMessage } = this.state;\n        pinMessage = pinMessage || this.pinMessage;\n        if (!pinMessage) return;\n\n        const { chatId, messageId } = pinMessage;\n\n        clearSelection();\n        this.setState({ pinMessage: null });\n        this.pinMessage = null;\n\n        if (!result) return;\n\n        pinMessageAction(chatId, messageId, false, !revoke);\n    };\n\n    handleUnpinMessageContinue = async result => {\n        let { unpinMessage } = this.state;\n        unpinMessage = unpinMessage || this.unpinMessage;\n        if (!unpinMessage) return;\n\n        const { chatId, messageId } = unpinMessage;\n\n        clearSelection();\n        this.setState({ unpinMessage: null });\n        this.unpinMessage = null;\n\n        if (!result) return;\n\n        if (canPinMessages(chatId)) {\n            if (messageId) {\n                await unpinMessageAction(chatId, messageId);\n            } else {\n                closePinned();\n\n                await unpinAllMessages(chatId);\n            }\n        } else {\n            closePinned();\n\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId,\n                clientData: { ...data, ...{ unpinned: true } }\n            });\n        }\n    };\n\n    handleAlertContinue = result => {\n        this.setState({ alert: null });\n    };\n\n    handleOpenUrlContinue = (event, result) => {\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\n\n        this.setState({ openUrlAlert: null });\n        this.openUrlAlert = null;\n\n        if (!result) return;\n\n        const { url, onClick } = openUrlAlert;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    handleOpenGameContinue = (event, result) => {\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\n\n        this.setState({ openGameAlert: null });\n        this.openGameAlert = null;\n\n        if (!result) return;\n\n        const { game, params } = openGameAlert;\n        if (!game) return;\n        if (!params) return;\n\n        const { url, message } = params;\n        if (!url) return;\n        if (!message) return;\n\n        openGameInBrowser(url, message);\n    };\n\n    handleRequestUrlContinue = async (event, open, values) => {\n        const { requestUrlAlert } = this.state;\n        this.setState({ requestUrlAlert: null });\n\n        if (!open) return;\n\n        const { params } = requestUrlAlert;\n        if (!params) return;\n\n        const { result, chatId, messageId, buttonId } = params;\n        if (!result) return;\n\n        if (!values.value1) {\n            this.openUrlAlert = { url: result.url };\n            this.handleOpenUrlContinue(event, open);\n        } else {\n            const httpUrl = await TdLibController.send({\n                '@type': 'getLoginUrl',\n                chat_id: chatId,\n                message_id: messageId,\n                button_id: buttonId,\n                allow_write_access: result.request_write_access && values.value2\n            });\n\n            this.openUrlAlert = { url: httpUrl.url };\n            this.handleOpenUrlContinue(event, open);\n        }\n    };\n\n    handleInputPasswordContinue = (result, password) => {\n        const { inputPasswordAlert } = this.state;\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\n\n        if (!result) {\n            onCloseDialog();\n            return;\n        }\n\n        const { onPassword } = inputPasswordAlert;\n        onPassword && onPassword(password, onCloseDialog, onError);\n    };\n\n    handleBlockSenderContinue = async (result, params) => {\n        const { requestBlockSenderAlert } = this.state;\n\n        this.setState({ requestBlockSenderAlert: null });\n\n        if (!result) {\n            return;\n        }\n\n        const { sender } = requestBlockSenderAlert;\n        if (!sender) return;\n\n        let chatId = null;\n        switch (sender['@type']) {\n            case 'messageSenderUser': {\n                blockSender(sender);\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\n                break;\n            }\n            case 'messageSenderChat': {\n                chatId = sender.chat_id;\n                break;\n            }\n        }\n\n        if (!params || params.reportSpam) {\n            const reason = getChatLocation(chatId)\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\n                : { '@type': 'chatReportReasonSpam' };\n\n            reportChat(chatId, reason);\n        }\n\n        if (!params || params.deleteChat) {\n            const deleteChat = canDeleteChat(chatId);\n            if (!deleteChat) return;\n\n            this.leaveChat = { chatId };\n            this.handleLeaveContinue(true, false);\n        }\n    };\n\n    render() {\n        const {\n            leaveChat,\n            clearHistory,\n            deleteMessages,\n            pinMessage,\n            unpinMessage,\n            alert,\n            openUrlAlert,\n            openGameAlert,\n            requestUrlAlert,\n            inputPasswordAlert,\n            requestBlockSenderAlert\n        } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        } else if (pinMessage) {\n            const { chatId, messageId } = pinMessage;\n\n            return (\n                <PinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handlePinMessageContinue} />\n            );\n        } else if (unpinMessage) {\n            const { chatId, messageId } = unpinMessage;\n\n            return (\n                <UnpinMessageDialog\n                    chatId={chatId}\n                    messageId={messageId}\n                    onClose={this.handleUnpinMessageContinue} />\n            );\n        } else if (alert) {\n            const { params } = alert;\n\n            return (\n                <AlertDialog\n                    params={params}\n                    onClose={this.handleAlertContinue} />\n            );\n        } else if (openUrlAlert) {\n            const { url, params } = openUrlAlert;\n\n            return (\n                <OpenUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleOpenUrlContinue}/>\n            );\n        } else if (openGameAlert) {\n            const { game, params } = openGameAlert;\n\n            return (\n                <OpenGameDialog\n                    game={game}\n                    params={params}\n                    onClose={this.handleOpenGameContinue}/>\n            );\n        } else if (requestUrlAlert) {\n            const { url, params } = requestUrlAlert;\n\n            return (\n                <RequestUrlDialog\n                    url={url}\n                    params={params}\n                    onClose={this.handleRequestUrlContinue}/>\n            );\n        } else if (inputPasswordAlert) {\n            const { state, error } = inputPasswordAlert;\n\n            return (\n                <InputPasswordDialog\n                    state={state}\n                    error={error}\n                    onClose={this.handleInputPasswordContinue}/>\n            );\n        } else if (requestBlockSenderAlert) {\n            const { sender } = requestBlockSenderAlert;\n\n            return (\n                <BlockSenderDialog\n                    sender={sender}\n                    onClose={this.handleBlockSenderContinue}/>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function openGameInBrowser(url, message) {\n    let sharedPreferences = {};\n    try {\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\n    } catch (e) { }\n\n    const existing = sharedPreferences['' + message.id];\n    let hash = existing ? existing : ''\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\n    if (!existing) {\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        const array = new Uint8Array(1);\n        for (let i = 0; i < 20; i++) {\n            window.crypto.getRandomValues(array)\n            hash += chars[array[0] % chars.length];\n        }\n\n        sharedPreferences['' + message.id] = hash;\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\n    }\n    addHash += hash;\n    const index = url.indexOf('#');\n    if (index < 0) {\n        url += '#' + addHash;\n    } else {\n        const curHash = url.substring(0, index + 1);\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\n            url += '&' + addHash;\n        } else {\n            if (curHash.length > 0) {\n                url += '?' + addHash;\n            } else {\n                url += addHash;\n            }\n        }\n    }\n\n    const newWindow = window.open();\n    newWindow.opener = null;\n    newWindow.location = url;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup, options } = update;\n\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false, options = {}) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId && !options) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId, options);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}